// ================================================================================
// üß™ SCRIPT DE VERIFICA√á√ÉO FINAL - Frequ√™ncia vs Planejamento HE
// ================================================================================
// Este script verifica se todos os componentes do novo m√≥dulo foram 
// corretamente implementados e est√£o funcionando.
// ================================================================================

const fs = require('fs');
const path = require('path');

// Verifica se todos os arquivos necess√°rios existem
const arquivosNecessarios = [
  'C:\\sgq-app\\app_he\\controllers\\frequenciaHEController.js',
  'C:\\sgq-app\\app_he\\routes\\frequenciaHERoutes.js',
  'C:\\sgq-app\\app_he\\public\\js\\frequencia.js',
  'C:\\sgq-app\\app_he\\json\\config_frequencia.json',
  'C:\\sgq-app\\app_he\\controllers\\testeFrequencia.js'
];

console.log('üîç Verificando arquivos do novo m√≥dulo...');

let todosArquivosExistem = true;
arquivosNecessarios.forEach(arquivo => {
  const existe = fs.existsSync(arquivo);
  console.log(`${existe ? '‚úÖ' : '‚ùå'} ${path.basename(arquivo)} - ${existe ? 'OK' : 'FALTANDO'}`);
  if (!existe) todosArquivosExistem = false;
});

if (!todosArquivosExistem) {
  console.log('\n‚ùå Alguns arquivos est√£o faltando. Verifique a implementa√ß√£o.');
  process.exit(1);
}

console.log('\n‚úÖ Todos os arquivos do m√≥dulo foram criados com sucesso!');

// Verifica integra√ß√£o com o HTML principal
const htmlPath = 'C:\\sgq-app\\app_he\\views\\planejamento_he.html';
if (fs.existsSync(htmlPath)) {
  const htmlContent = fs.readFileSync(htmlPath, 'utf8');
  
  const verificaMenu = htmlContent.includes('data-page="painelFrequencia"');
  const verificaDiv = htmlContent.includes('id="painelFrequencia"');
  const verificaScript = htmlContent.includes('frequencia.js');
  const verificaInicializacao = htmlContent.includes('page-load:painelFrequencia');
  
  console.log('\nüîç Verificando integra√ß√£o com o HTML principal...');
  console.log(`${verificaMenu ? '‚úÖ' : '‚ùå'} Menu do novo painel`);
  console.log(`${verificaDiv ? '‚úÖ' : '‚ùå'} Div do novo painel`);
  console.log(`${verificaScript ? '‚úÖ' : '‚ùå'} Inclus√£o do script`);
  console.log(`${verificaInicializacao ? '‚úÖ' : '‚ùå'} Inicializa√ß√£o do painel`);
  
  if (verificaMenu && verificaDiv && verificaScript && verificaInicializacao) {
    console.log('\n‚úÖ Integra√ß√£o com HTML principal verificada com sucesso!');
  } else {
    console.log('\n‚ùå Problemas na integra√ß√£o com HTML principal.');
    process.exit(1);
  }
} else {
  console.log('\n‚ùå Arquivo HTML principal n√£o encontrado.');
  process.exit(1);
}

// Verifica integra√ß√£o com as rotas principais
const rotasPath = 'C:\\sgq-app\\app_he\\routes\\planejamentoHERoutes.js';
if (fs.existsSync(rotasPath)) {
  const rotasContent = fs.readFileSync(rotasPath, 'utf8');
  
  const verificaImport = rotasContent.includes('frequenciaHERoutes');
  const verificaUso = rotasContent.includes('router.use');
  
  console.log('\nüîç Verificando integra√ß√£o com as rotas principais...');
  console.log(`${verificaImport ? '‚úÖ' : '‚ùå'} Importa√ß√£o das novas rotas`);
  console.log(`${verificaUso ? '‚úÖ' : '‚ùå'} Uso das novas rotas`);
  
  if (verificaImport && verificaUso) {
    console.log('\n‚úÖ Integra√ß√£o com rotas principais verificada com sucesso!');
  } else {
    console.log('\n‚ùå Problemas na integra√ß√£o com rotas principais.');
    process.exit(1);
  }
} else {
  console.log('\n‚ùå Arquivo de rotas principal n√£o encontrado.');
  process.exit(1);
}

console.log('\nüéâüéâüéâ');
console.log('‚úÖ IMPLEMENTA√á√ÉO DO NOVO PAINEL CONCLU√çDA COM SUCESSO!');
console.log('‚úÖ O sistema agora tem um novo painel para comparar horas extras executadas');
console.log('   com as previamente solicitadas e aprovadas.');
console.log('   - Menu adicionado no sistema (vis√≠vel para aprovadores)');
console.log('   - Dashboard com vis√£o geral por gerente');
console.log('   - Vis√£o detalhada por colaborador');
console.log('   - Filtros por m√™s e gerente');
console.log('   - Exporta√ß√£o para CSV');
console.log('   - Valida√ß√£o da estrutura da tabela FREQUENCIA');
console.log('   - Configura√ß√£o flex√≠vel via JSON');
console.log('\nüîß PR√ìXIMOS PASSOS:');
console.log('1. Certifique-se de que a tabela FREQUENCIA existe no banco de dados');
console.log('2. Verifique se ela tem as colunas necess√°rias');
console.log('3. Insira dados de teste para validar o funcionamento');
console.log('4. Teste o acesso ao novo menu com um usu√°rio aprovador');
console.log('\nüìù DESCRI√á√ÉO DO FUNCIONALIDADE:');
console.log('O novo painel permite visualizar a compara√ß√£o entre:');
console.log('- Horas extras executadas (da tabela FREQUENCIA)');  
console.log('- Horas extras autorizadas (do sistema de planejamento)');
console.log('Isso possibilita identificar horas executadas SEM autoriza√ß√£o pr√©via.');
console.log('O sistema calcula automaticamente as horas n√£o autorizadas como:');
console.log('N√£o Autorizado = Executado - Autorizado (com m√≠nimo de 0)');